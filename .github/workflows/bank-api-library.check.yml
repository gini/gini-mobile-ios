name: Check Bank API Library
on:
  push:
   paths:
      - 'BankAPILibrary/**'
   tags-ignore:
      - '**'
  pull_request:
   paths:
      - 'BankAPILibrary/**'
  workflow_call:
    secrets:
      GINI_MOBILE_TEST_CLIENT_SECRET:
        required: true
  workflow_dispatch:
 
jobs:
  check:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [GiniBankAPILibrary, GiniBankAPILibraryPinning]
        destination: ['platform=iOS Simulator,OS=16.4,name=iPhone 13', 'platform=iOS Simulator,OS=17.2,name=iPhone 11']
    steps:
    - uses: maxim-lobanov/setup-xcode@v1.5.1
      with:
        xcode-version: '14.3.1'

    - name: Checkout
      uses: actions/checkout@v3

    - name: Check package GiniBankAPILibrary
      run: |
           cd BankAPILibrary/GiniBankAPILibrary
           swift package update

    - name: Check package GiniBankAPILibraryPinning
      run: |
           cd BankAPILibrary/GiniBankAPILibraryPinning
           swift package update

    - name: Link to 15.0 Simulators
      if: matrix.destination == 'platform=iOS Simulator,OS=15.0,name=iPhone 11'
      run: |
        echo "Creating Runtimes folder if needed..."
        sudo mkdir -p /Library/Developer/CoreSimulator/Profiles/Runtimes
        echo "Creating symlink of the iOS 15.0 runtime..."
        sudo ln -s /Applications/Xcode_13.1.app/Contents/Developer/Platforms/iPhoneOS.platform/Library/Developer/CoreSimulator/Profiles/Runtimes/iOS.simruntime /Library/Developer/CoreSimulator/Profiles/Runtimes/iOS\ 15.0.simruntime

    - name: Build sdk targets
      run: |
        xcodebuild -workspace GiniMobile.xcworkspace -scheme "${{ matrix.target }}" -destination "${{ matrix.destination }}" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO

    - name: Run unit tests
      run: |
        xcodebuild clean test -workspace GiniMobile.xcworkspace -scheme "${{ matrix.target }}Tests" -destination "${{ matrix.destination }}" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO
   
    - name: Build example app and run integration tests
      run: >
        xcodebuild clean test
        -project BankAPILibrary/GiniBankAPILibraryExample/GiniBankAPILibraryExample.xcodeproj
        -scheme "GiniBankAPILibraryExampleTests"
        -destination "${{ matrix.destination }}"
        CODE_SIGN_IDENTITY=""
        CODE_SIGNING_REQUIRED=NO
        ONLY_ACTIVE_ARCH=NO
        CLIENT_ID="gini-mobile-test"
        CLIENT_SECRET="${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}"

    - name: Build pinning example app and run integration tests
      run: >
        xcodebuild clean test
        -project BankAPILibrary/GiniBankAPILibraryPinningExample/GiniBankAPILibraryPinningExample.xcodeproj
        -scheme "GiniBankAPILibraryPinningExampleTests"
        -destination "${{ matrix.destination }}"
        -skip-testing:GiniBankAPILibraryPinningExampleTests/PinningWrongCertificatesIntegrationTests
        CODE_SIGN_IDENTITY=""
        CODE_SIGNING_REQUIRED=NO
        ONLY_ACTIVE_ARCH=NO
        CLIENT_ID="gini-mobile-test"
        CLIENT_SECRET="${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}"
        &&
        xcodebuild clean test
        -project BankAPILibrary/GiniBankAPILibraryPinningExample/GiniBankAPILibraryPinningExample.xcodeproj
        -scheme "GiniBankAPILibraryPinningExampleTests"
        -destination "${{ matrix.destination }}"
        -only-testing:GiniBankAPILibraryPinningExampleTests/PinningWrongCertificatesIntegrationTests
        CODE_SIGN_IDENTITY=""
        CODE_SIGNING_REQUIRED=NO
        ONLY_ACTIVE_ARCH=NO
        CLIENT_ID="gini-mobile-test"
        CLIENT_SECRET="${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}"
