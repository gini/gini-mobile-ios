name: Publish GiniHealthSDKExample to Firebase Distribution
permissions:
  contents: read
on:
  push:
    paths:
      - '.github/workflows/**'
      - '.github/bin/**'
      - 'fastlane/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-publish
  cancel-in-progress: ${{ !contains(github.ref, 'refs/tags/')}}

env:
  XCODE_VERSION: '16.4'
  APP_IDENTIFIER: 'net.gini.healthsdk.example'
  APP_SCHEME: 'GiniHealthSDKExample'

jobs:
  prepare:
    runs-on: macos-latest
    outputs:
      jira_ticket: ${{ steps.extract_jira_ticket.outputs.ticket }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 3

      - name: Make scripts executable
        run: |
          ls -la ${{ github.workspace }}/.github/bin/
          chmod +x ${{ github.workspace }}/.github/bin/*.sh
          ls -la ${{ github.workspace }}/.github/bin/

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Output Xcode & Fastlane versions
        run: |
          xcodebuild -version
          fastlane --version || echo "Fastlane not installed yet"
          ruby --version

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.0'
          bundler-cache: true

      - name: Extract Jira ticket
        id: extract_jira_ticket
        run: ${{ github.workspace }}/.github/bin/extract-jira-ticket.sh

  check:
    needs: prepare
    uses: gini/gini-mobile-ios/.github/workflows/health-sdk.check.yml@poc-match-provision-profiles-and-certificates
    secrets:
      GINI_MOBILE_TEST_CLIENT_SECRET: ${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}

  build:
    needs: prepare
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Make scripts executable
        run: chmod +x ${{ github.workspace }}/.github/bin/*.sh

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.0'
          bundler-cache: true
       
      - name: Update credentials in the source code
        id: setup_credentials
        run: ${{ github.workspace }}/.github/bin/setup-credentials.sh

      #TODO: needs to be moved in the scripts somewhere
      - name: Setup Firebase API Key
        run: |
            plutil -replace API_KEY -string "${{ secrets.FIREBASE_API_KEY }}" HealthSDK/GiniHealthSDKExample/GoogleService-Info.plist
      
      - name: Build and archive project with Match
        uses: maierj/fastlane-action@v3.1.0
        with:
          lane: 'build_app_adhoc'
        env:
          APP_SCHEME: ${{ env.APP_SCHEME }}
          APP_IDENTIFIER: ${{ env.APP_IDENTIFIER }}
          IPA_FILE: GiniHealthSDKExample.ipa
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_URL: ${{ secrets.MATCH_GIT_URL }}
          KEYCHAIN_PASSWORD: ${{ secrets.GINI_DISTRIBUTION_CERTIFICATE_SECRET }}

      - name: Check IPA existence
        uses: andstor/file-existence-action@v3
        with:
          files: "GiniHealthSDKExample.ipa"
          fail: true

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: GiniHealthSDKExample
          path: '*.ipa'
          retention-days: 1

  distribute:
    needs: [prepare, build]
    runs-on: macos-latest
    environment: Deploy-approval
    outputs:
      firebase_console_uri: ${{ steps.distribute.outputs.FIREBASE_CONSOLE_URI }}
      testing_uri: ${{ steps.distribute.outputs.TESTING_URI }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Make scripts executable
        run: chmod +x ${{ github.workspace }}/.github/bin/*.sh

      - name: Download IPA artifact
        uses: actions/download-artifact@v4
        with:
          name: GiniHealthSDKExample

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Firebase tools
        run: npm install -g firebase-tools@13.17.0

      - name: Distribute to Firebase
        id: distribute
        run: |
          echo "üî• Starting Firebase distribution with Fastlane"
          ${{ github.workspace }}/.github/bin/upload-to-firebase.sh
        env:
          FIREBASE_APP_ID: ${{ secrets.GINI_HEALTH_SDK_EXAMPLE_APP_FIREBASE_ID }}
          FIREBASE_SERVICE_ACCOUNT_JSON: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}
          IPA_FILE: GiniHealthSDKExample.ipa
          DISTRIBUTION_GROUPS: gini-internal
          RELEASE_NOTES: |
            üöÄ Build ${{ github.run_number }} from ${{ github.ref_name }}
            üìù Commit: jira ticket id ${{ needs.prepare.outputs.jira_ticket }}
            üí¨ Message: ${{ github.event.head_commit.message }}

  post-distribute:
    needs: [prepare, distribute]
    if: needs.prepare.outputs.jira_ticket != ''
    runs-on: macos-latest
    steps:
      - name: Login to Jira
        uses: justin-jhg/gajira-login@v1
        env:
          JIRA_BASE_URL: ${{ secrets.JIRA_BASE_URL }}
          JIRA_USER_EMAIL: ${{ secrets.JIRA_USER_EMAIL }}
          JIRA_API_TOKEN: ${{ secrets.JIRA_API_KEY }}

      - name: Comment on Jira issue
        uses: atlassian/gajira-comment@v3
        with:
          issue: ${{ needs.prepare.outputs.jira_ticket }}
          comment: Build health example app ${{ needs.distribute.outputs.firebase_console_uri }} and app tester build can be downloaded from here ${{ needs.distribute.outputs.testing_uri }}