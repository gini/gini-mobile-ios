name: Check Health SDK
on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    paths:
      - 'HealthSDK/**'
      - 'HealthAPILibrary/**'
  workflow_call:
    secrets:
      GINI_MOBILE_TEST_CLIENT_SECRET:
        required: true
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-check
  cancel-in-progress: ${{ !contains(github.ref, 'refs/tags/')}}

jobs:
  check:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [GiniHealthSDK, GiniHealthSDKExampleTests]
        destination: ['platform=iOS Simulator,OS=18.5,name=iPhone 16']

    steps:
    - uses: maxim-lobanov/setup-xcode@v1.6.0
      with:
        xcode-version: '16.4'

    - name: Checkout
      uses: actions/checkout@v4

    - name: Check package GiniHealthSDK
      if: ${{ matrix.target == 'GiniHealthSDK' }}
      run: |
           cd HealthSDK/GiniHealthSDK
           swift package update
      
    - name: setup ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2.0'
        bundler-cache: true

    - name: Build and run tests for "${{ matrix.target }}"
      uses: maierj/fastlane-action@v3.1.0
      with:
          lane: 'run_unit_tests'
          options: >
            { 
              "target":  "${{ matrix.target }}",
              "destination": "${{ matrix.destination }}",
              "clientSecret": "${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}"
            }

    # - name: Build example app
    #   run: |
    #     xcodebuild -project HealthSDK/GiniHealthSDKExample/GiniHealthSDKExample.xcodeproj -scheme "GiniHealthSDKExample" -destination "${{ matrix.destination }}" CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO ONLY_ACTIVE_ARCH=NO    

    # - name: Extract Device Name
    #   id: extract_name
    #   run: |
    #     DEVICE_NAME=$(echo "${{ matrix.destination }}" | sed -n 's/.*name=\([^,]*\).*/\1/p')
    #     echo "DEVICE_NAME=${DEVICE_NAME}" >> $GITHUB_ENV        

    # - name: Start iOS Simulator
    #   run: |
    #     xcrun simctl boot "$DEVICE_NAME"
    #     xcrun simctl bootstatus "$DEVICE_NAME" -b        
 
