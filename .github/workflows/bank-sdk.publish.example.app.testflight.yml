name: Upload GiniBankSDKExample to TestFlight

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]
    paths:
      - 'BankSDK/**'
      - 'CaptureSDK/**'
      - 'BankAPILibrary/**'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-publish
  cancel-in-progress: ${{ !contains(github.ref, 'refs/tags/')}}

jobs:
#   check:
#     uses: ./.github/workflows/bank-sdk.check.yml
#     secrets:
#       GINI_MOBILE_TEST_CLIENT_SECRET: ${{ secrets.GINI_MOBILE_TEST_CLIENT_SECRET }}
  upload-testflight:
    runs-on: macos-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: '15.3'

      - name: Setup Provisioning Profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.GINI_DISTRIBUTION_CERTIFICATE }}
          P12_PASSWORD: ${{ secrets.GINI_DISTRIBUTION_CERTIFICATE_SECRET }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.GINI_BANK_SDK_EXAMPLE_ADHOC_DISTRIBUTION_PROVISION_PROFILE }}
          BUILD_PROVISION_PROFILE_EXTENSION_BASE64: ${{ secrets.GINI_BANK_SDK_EXTENSION_ADHOC_DISTRIBUTION_PROVISION_PROFILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.GINI_DISTRIBUTION_CERTIFICATE_SECRET }}
        run: |
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH1=$RUNNER_TEMP/build_pp1.mobileprovision
          PP_PATH2=$RUNNER_TEMP/build_pp2.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # Decode and save certificate & provisioning profiles
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH1
          echo -n "$BUILD_PROVISION_PROFILE_EXTENSION_BASE64" | base64 --decode --output $PP_PATH2

          # Create and unlock a temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # Import the certificate into the keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH

          # Ensure the keychain is prioritized for code signing
          security list-keychain -d user -s $KEYCHAIN_PATH

          # Install provisioning profiles
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH1 ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH2 ~/Library/MobileDevice/Provisioning\ Profiles
     
      - name: Archive Xcode Project
        run: |
          xcodebuild clean archive \
            -project BankSDK/GiniBankSDKExample/GiniBankSDKExample.xcodeproj \
            -scheme "GiniBankSDKExample" \
            -archivePath ./GiniBankSDKExample.xcarchive \
            -configuration Release \
            -destination generic/platform=iOS \
            CODE_SIGN_IDENTITY="Apple Distribution" \
            CODE_SIGN_STYLE=Manual \
            DEVELOPMENT_TEAM=JA825X8F7Z \
            ONLY_ACTIVE_ARCH=NO

      - name: Export .ipa File
        run: |
          xcodebuild -exportArchive \
            -archivePath GiniBankSDKExample.xcarchive \
            -exportPath . \
            -exportOptionsPlist ExportOptions.plist \
            -destination "generic/platform=iOS" \
            CODE_SIGNING_REQUIRED=YES \
            ONLY_ACTIVE_ARCH=NO \
            CODE_SIGN_STYLE=Manual

      - name: Verify .ipa File Existence
        uses: andstor/file-existence-action@v3
        with:
          files: "*.ipa"
          fail: true

      - name: Install Fastlane
        run: |
            gem install fastlane

      - name: Setup App Store API Key
        run: |
          mkdir -p $HOME/.appstoreconnect/private_keys
          echo "${{ secrets.APP_STORE_API_KEY }}" | base64 --decode > $HOME/.appstoreconnect/private_keys/AuthKey.p8
          chmod 600 $HOME/.appstoreconnect/private_keys/AuthKey.p8

      - name: Test App Store Connect API Key
        run: |
          fastlane run app_store_connect_api_key \
            key_id:"${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}" \
            issuer_id:"${{ secrets.APP_STORE_CONNECT_API_ISSUER_ID }}" \
            key_filepath:"$HOME/.appstoreconnect/private_keys/AuthKey.p8"

      # - name: Debug API Key Storage
      #   run: |
      #     echo "Checking API Key File..."
      #     ls -la $HOME/.appstoreconnect/private_keys/
      #     echo "First few lines of the API Key:"
      #     head -n 5 $HOME/.appstoreconnect/private_keys/AuthKey.p8

      - name: Upload .ipa to TestFlight
        env:
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APP_STORE_API_KEY_ID }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APP_STORE_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_API_KEY }}
        run: fastlane publish_to_testflight --verbose